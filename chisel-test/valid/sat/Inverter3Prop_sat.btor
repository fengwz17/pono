1 sort bitvec 1
2 input 1 reset
3 input 1 in
4 state 1 delay ; @[Inverter.scala 25:17]
; _resetCount.init
5 zero 1
6 state 1 _resetCount
7 init 1 6 5 ; @[Inverter.scala 27:6]
8 neq 1 4 3 ; @[Inverter.scala 34:14]
9 not 1 2 ; @[Inverter.scala 34:9]
10 not 1 8 ; @[Inverter.scala 34:9]
11 eq 1 3 4 ; @[Inverter.scala 36:13]
12 not 1 11 ; @[Inverter.scala 36:9]
13 eq 1 4 4 ; @[Inverter.scala 37:14]
14 not 1 13 ; @[Inverter.scala 37:9]
15 one 1
16 ugte 1 6 15
17 not 1 16
18 implies 1 9 8
19 not 1 18
20 bad 19 ; assert @[Inverter.scala 34:9]
21 implies 1 9 11
22 not 1 21
23 bad 22 ; assert_1 @[Inverter.scala 36:9]
24 implies 1 9 13
25 not 1 24
26 bad 25 ; assert_2 @[Inverter.scala 37:9]
27 implies 1 17 2
28 constraint 27 ; _resetActive
; delay.next
29 next 1 4 3
; _resetCount.next
30 sort bitvec 2
31 uext 30 6 1
32 one 1
33 uext 30 32 1
34 add 30 31 33
35 slice 1 34 0 0
36 ite 1 17 35 6
37 next 1 6 36
