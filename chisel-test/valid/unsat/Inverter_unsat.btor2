1 sort bitvec 1
2 input 1 reset
3 input 1 in
4 state 1 _cycles
5 state 1 delay ; @[Inverter.scala 25:17]
6 state 1 out_1 ; @[past.scala 47:23]
; _resetCount.init
7 zero 1
8 state 1 _resetCount
9 init 1 8 7
10 one 1
11 ugte 1 4 10
12 not 1 11
13 not 1 12 ; @[Inverter.scala 27:6]
14 eq 1 5 6 ; @[Inverter.scala 35:14]
15 not 1 2 ; @[Inverter.scala 35:9]
16 not 1 14 ; @[Inverter.scala 35:9]
17 one 1
18 ugte 1 8 17
19 not 1 18
20 and 1 15 13
21 implies 1 20 14
22 not 1 21
23 bad 22 ; assert @[Inverter.scala 35:9]
24 implies 1 19 2
25 constraint 24 ; _resetActive
; _cycles.next
26 zero 1
27 sort bitvec 2
28 uext 27 4 1
29 one 1
30 uext 27 29 1
31 add 27 28 30
32 slice 1 31 0 0
33 ite 1 12 32 4
34 ite 1 2 26 33
35 next 1 4 34
; delay.next
36 next 1 5 3
; out_1.next
37 next 1 6 3
; _resetCount.next
38 uext 27 8 1
39 one 1
40 uext 27 39 1
41 add 27 38 40
42 slice 1 41 0 0
43 ite 1 19 42 8
44 next 1 8 43
